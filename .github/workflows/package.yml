name: Build PyInstaller Release

permissions:
  contents: write
  id-token: write

on:
  push:
    branches: [CSNET]
    tags: ['v*']
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install PortAudio dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y portaudio19-dev

      - name: Install FFmpeg dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y ffmpeg

      - name: Install FFmpeg on Windows
        if: matrix.os == 'windows-latest'
        uses: FedericoCarboni/setup-ffmpeg@v4

      - name: Install UV CLI and project dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync

      - name: Install UPX on Linux
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y upx

      - name: Build with PyInstaller via UV
        shell: bash
        run: |
          uv run pyinstaller \
            --noconfirm \
            --onefile \
            --collect-all vosk \
            --collect-all PyQt6 \
            --collect-all librosa \
            --collect-all numpy \
            --collect-all sounddevice \
            --collect-all pydub \
            --collect-all pyaudio \
            --collect-all tinytag \
            --collect-all openai-whisper \
            --collect-all python-dotenv \
            --collect-all click \
            src/luister/__init__.py \
            --name luister \
            --strip

      - name: Rename output (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Write-Host "Listing contents of dist directory:"
          Get-ChildItem -Path "dist" -Recurse
          if (Test-Path -Path "dist\luister.exe") {
            Move-Item -Path "dist\luister.exe" -Destination "dist\luister-windows.exe"
          } else {
            Write-Error "File not found: dist\luister.exe"
          }

      - name: Rename output (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mv dist/luister dist/luister-linux

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: luister-${{ matrix.os }}
          path: dist/luister-*

  publish_release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')) }}
    steps:
      - name: Set release tag name
        id: set_tag
        run: |
          DATE=$(date +'%Y.%m.%d')
          echo "TAG_NAME=v${DATE}" >> $GITHUB_ENV

      - name: Download Linux build
        uses: actions/download-artifact@v4
        with:
          name: luister-ubuntu-latest
          path: dist_linux
      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: luister-windows-latest
          path: dist_windows
      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: |
            dist_linux/luister-linux
            dist_windows/luister-windows.exe